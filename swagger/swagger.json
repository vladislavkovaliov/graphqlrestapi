{
  "swagger": "2.0",
  "info": {
    "title": "REST API",
    "description": "REST API docs",
    "version": "1.0.0"
  },
  "host": "graphqlrestapi.herokuapp.com",
  "schemes": [
    "https"
  ],
  "basePath": "",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/pingPong": {
      "get": {
        "summary": "Test",
        "description": "Test description",
        "parameters": null,
        "tags": [
          "API"
        ],
        "responses": {
          "200": {
            "description": "An Object",
            "schema": {
              "$ref": "#/definitions/PingPong"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/authPingPong": {
      "get": {
        "summary": "Test",
        "description": "test",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "JWT token.",
            "required": "true",
            "type": "string"
          }
        ],
        "tags": [
          "API"
        ],
        "responses": {
          "200": {
            "description": "An Object",
            "schema": {
              "$ref": "#/definitions/PingPong"
            }
          },
          "403": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "summary": "Test",
        "description": "test",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Data object",
            "required": "true",
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "email"
                },
                "password": {
                  "type": "string",
                  "description": "password"
                }
              }
            }
          }
        ],
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "An Object",
            "schema": {
              "properties": {
                "email": {
                  "type": "string",
                  "description": "email"
                },
                "password": {
                  "type": "string",
                  "description": "password"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error401"
            }
          }
        }
      }
    },
    "/graphql/profile": {
      "post": {
        "summary": "Return all profiles",
        "description": "Return all profiles by graphql syntax",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Graphql query",
            "required": "true",
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "Grapqhql query"
                }
              }
            }
          }
        ],
        "tags": [
          "Profiles"
        ],
        "responses": {
          "200": {
            "description": "An Object",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Test"
                },
                "dateOfBirth": {
                  "type": "string",
                  "description": "Test"
                },
                "hireDate": {
                  "type": "string",
                  "description": "Test"
                },
                "email": {
                  "type": "string",
                  "description": "Test"
                },
                "gender": {
                  "type": "string",
                  "description": "Test"
                },
                "department": {
                  "type": "string",
                  "description": "Test"
                },
                "homeAddress": {
                  "type": "string",
                  "description": "Test"
                },
                "phones": {
                  "type": "string",
                  "description": "Test"
                },
                "login": {
                  "type": "string",
                  "description": "Test"
                },
                "created": {
                  "type": "string",
                  "description": "Test"
                },
                "name": {
                  "type": "string",
                  "description": "Test"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error401"
            }
          }
        }
      }
    },
    "/graphql/users": {
      "post": {
        "summary": "Return all users info",
        "description": "Return all user's data by graphql syntax",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Graphql query",
            "required": "true",
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "Grapqhql query"
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "An Object",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Test"
                },
                "dateOfBirth": {
                  "type": "string",
                  "description": "Test"
                },
                "hireDate": {
                  "type": "string",
                  "description": "Test"
                },
                "email": {
                  "type": "string",
                  "description": "Test"
                },
                "gender": {
                  "type": "string",
                  "description": "Test"
                },
                "department": {
                  "type": "string",
                  "description": "Test"
                },
                "homeAddress": {
                  "type": "string",
                  "description": "Test"
                },
                "phones": {
                  "type": "string",
                  "description": "Test"
                },
                "login": {
                  "type": "string",
                  "description": "Test"
                },
                "created": {
                  "type": "string",
                  "description": "Test"
                },
                "name": {
                  "type": "string",
                  "description": "Test"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error401"
            }
          }
        }
      }
    },
    "/graphql/stories": {
      "post": {
        "summary": "Return all stories info",
        "description": "Return all stories's data by graphql syntax",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Graphql query",
            "required": "true",
            "type": "string",
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string",
                  "description": "Grapqhql query"
                }
              }
            }
          }
        ],
        "tags": [
          "Stories"
        ],
        "responses": {
          "200": {
            "description": "An Object",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Should contain the unique id"
                },
                "text": {
                  "type": "string",
                  "description": "Should contain a text description"
                },
                "picture": {
                  "type": "string",
                  "description": "Should contain a image in base64 format"
                },
                "date": {
                  "type": "string",
                  "description": "21/02/2017"
                },
                "phones": {
                  "type": "string",
                  "description": "Should contain a phone number in string format"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error401"
            }
          }
        }
      }
    },
    "/api/config": {
      "get": {
        "summary": "Test",
        "description": "test",
        "parameters": [],
        "tags": [
          "API"
        ],
        "responses": {
          "200": {
            "description": "An Object",
            "schema": {
              "$ref": "#/definitions/Config"
            }
          },
          "404": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "PingPong": {
      "type": "object",
      "properties": {
        "pingPong": {
          "type": "string",
          "description": "just message"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer"
        },
        "success": {
          "type": "boolean"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "Config": {
      "type": "object",
      "properties": {
        "MONGO_URL": {
          "type": "string",
          "description": "url"
        },
        "MLAB_USER": {
          "type": "string",
          "description": "url"
        },
        "MLAB_PASSWORD": {
          "type": "string",
          "description": "url"
        }
      }
    }
  }
}
